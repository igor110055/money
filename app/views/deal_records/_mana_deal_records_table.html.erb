<%
  # 初始化所有变量
  @code = 'MANA'
  n = 1 # 数据集索引初始值
  amount_pos = 6 # 默认的CRYPTO总和显示位数
  total_price = total_amount = total_amount_fee = total_cny_amount = \
  total_cny_amount_now = total_earn_or_loss = total_real_profit = \
  total_real_profit_crypto = max_buy_price = 0

  # CRYPTO现价
  crypto_now = get_crypto_price(@code)
  # 原有参与投资的泰达币
  @ori_usdt = get_invest_params(3,@code).to_f
  # 自动买入的最大仓位值
  @max_buy_level = get_invest_params(5,@code).to_f
  # 交易所内剩余的CRYPTO
  @crypto_amount_ex = DealRecord.crypto_amount(@code)
  # 目前的仓位值
  @crypto_level = DealRecord.crypto_level(@code)
  # 自动买入的最大仓位值合人民币
  @max_buy_cny = @ori_usdt*@max_buy_level/100*$usdt_to_cny
  @max_buy_cny_remain = @max_buy_cny - @ori_usdt*@crypto_level/100*$usdt_to_cny
  # 交易所内剩余的泰达币的人民币价值
  @usdt2cny_ex = DealRecord.usdt_amount*$usdt_to_cny
  # 人民币兑换CRYPTO
  cny_to_crypto = Currency.new.cny_to_crypto(@code)
  # 下一笔要卖出的CRYPTO数量
  next_sell_amount = DealRecord.top_n_profit(@get_max_sell_count,:amount_fees)
  # 最近几小时内的累计获利
  real_profit_of_24h = DealRecord.real_profit_of_24h($send_to_trezor_time).to_i
  # 总累计获利
  total_real_profit = DealRecord.total_real_profit.to_i
  # 平均每秒的已实现损益值
  real_p_sec = DealRecord.real_profit_ave_sec($send_to_trezor_time)
  # 是否已经达到可以再次买入的时间
  enable_to_buy = DealRecord.enable_to_buy?

  # 有传入以下参数者显示所有记录
  def show_all_records_conditions
    params[:show_all] or params[:show_sell] or params[:show_unsell] or \
    params[:show_first] or params[:show_trezor] or params[:make_balance_count] or \
    params[:make_trezor_count] or params[:show_balance]
  end

  # 有传入以下参数者显示8位的CRYPTO数量
  def show_long_crypto_amount
    params[:make_trezor_count] or params[:show_trezor] or params[:show_unsell] or \
    params[:make_balance_count] or params[:show_balance]
  end

  # 现价栏位是否按照CRYPTO现价来执行计算
  def cal_with_crypto_now?( dr )
    !dr.real_profit or dr.real_profit == 0
  end

  # 列表种类参数
  def list_page_params
    {
      show_all: params[:show_all], show_sell: params[:show_sell], \
      show_unsell: params[:show_unsell], make_balance_count: params[:make_balance_count], \
      make_trezor_count: params[:make_trezor_count], show_first: params[:show_first], \
      show_balance: params[:show_balance], show_trezor: params[:show_trezor]
    }
  end

  # 多种列表能选择按照下单时间成交价成交量排序
  def order_list_params( field_name )
    { order_field: field_name }.merge list_page_params
  end

  # 点击转出后开启新视窗
  def build_switch_params( action, id )
      { action: action, id: id }.merge list_page_params
  end

  # 若有设定几分钟内最低价买入则显示买入的最高价为多少
  def show_buy_period_max_price
    if get_invest_params(17,@code).to_i > 0
      return "买入最低价时的最高价为：#{get_invest_params(31,@code)}"
    end
  end

  # 以符号表示成本均价是否越买越低的功能已开启
  def show_total_ave_cost_price
    # 目前的成本均价
    ave_cost_price = @total_ave_cost_price
    ave_cost_price = ave_cost_price.floor(3) if ave_cost_price > 0
    # 均价到多少则停止买入
    @buy_limit_ave = get_invest_params(39,@code).to_i
    limit_msg = @buy_limit_ave > 0 ? "(均价到达#{@buy_limit_ave}则停止买入)" : ""
    # 如果買入下一筆成本均價將大於上限則以高亮顯示(没有记录时会有Bug暂时关闭此功能 2022.4.29)
    span_class = reach_buy_limit_ave ? "buy_limit_ave" : ""
    get_invest_params(32,@code) == '1' ? raw("<u class=\"#{span_class}\" title=\"成交均价(成本均价越买越低的功能已开启)\">#{ave_cost_price}</u>") : raw("<span class=\"#{span_class}\" title=\"成交均价(含手续费)#{limit_msg}\">#{ave_cost_price}</span>")
  end

  # 判断買入下一筆成本均價是否將大於上限(产生BUG而废弃不用)
  def reach_buy_limit_ave
    return false
  end

  # 显示额度翻倍的最大购买价
  def show_double_buy_top_price
    raw "<span title=\"额度翻倍的最大购买价, 每隔#{get_invest_params(33,@code)}点购买额度翻倍\">#{get_invest_params(34,@code)}</span>"
  end
%>
<table width="<%=$default_table_width%>" style="font-size:<%=$deal_record_font_size%>">
  <tr class="thead">
    <td width="15"><%= link_to '🏠', set_crypto_as_home_path(code:@code) %></td>
    <td width="300">
      <% # 显示买入策略文字 %>
      📈 <%= show_buy_strategy(@code,3) %>
    </td>
    <td>
      <% # 成交价 %>
      <%= link_to t(:deal_record_price), order_list_params('price') %>
    </td>
    <td>成本</td>
    <td>
      <% # 现值 %>
      <%= t(:now_to_cny) %>
    </td>
    <td width="45">
      <% # 盈亏 %>
      <%= t(:earn_or_loss) %>
    </td>
    <td width="45">
      <% # 利率 %>
      <%= t(:profit_p) %>
    </td>
    <td>
      <% # 成交量 %>
      <%= link_to t(:deal_record_amount), order_list_params('amount') %>
    </td>
    <td colspan="2">
      <% # 资产净值变化值 %>
      <%= show_net_value_change_text %>
    </td>
  </tr>
<% if @deal_records %>
<% @deal_records.each do |dr| %>
  <% if n <= $deal_records_limit or show_all_records_conditions %>
    <tr <%= change_row_color %>>
      <td align="right">
        <% # 显示优卖功能链接 %>
        <span <%= raw "class='switch_first_sell'" if dr.first_sell %>>
          <%= link_to n, build_switch_params(:switch_first_sell, dr) %>
        </span>
      </td>
      <td align="center">
        <% # 显示下单时间 %>
        <%= link_edit_to(dr,to_t(dr.created_at,true)) %>
      </td>
      <td align="right">
        <% # 成交价 %>
        <%= price = to_n(dr.price,3) %>
      </td>
      <td align="right">
        <% # 值人民币 %>
        <%= cny_amount = to_n(dr.cny_amount,1) %>
      </td>
      <td align="right">
        <% # 现值 %>
        <%= cny_amount_now = cal_with_crypto_now?(dr) ? \
        to_n(dr.cny_amount_now,1) : to_n(cny_amount.to_f + dr.real_profit.to_f,1) %>
      </td>
      <td align="right">
        <% # 盈亏 %>
        <%= earn_or_loss = dr.earn_or_loss if cal_with_crypto_now?(dr) %>
      </td>
      <td align="right">
        <% # 利率 %>
        <%= profit = to_n(earn_or_loss.to_f/cny_amount.to_f*100) if cal_with_crypto_now?(dr) %>
      </td>
      <td align="right">
        <% # 成交量 %>
        <% amount_fee = to_n(dr.amount-dr.fees,8) %>
        <%= amount = to_n(dr.amount,8) %>
      </td>
      <td align="right">
        <% # 更新时间 %>
        <%= updated_at_str = to_time(dr.updated_at) %>
      </td>
      <td align="right">
        <%
          # 此表格栏位为功能链接或者显示获利值
          # 卖出记录｜消账记录｜钱包记录
          if dr.auto_sell and dr.real_profit
            # 若此记录为钱包记录
            if dr.real_profit == 0
              # 转到未卖记录  %>
              <%= link_to t(:set_from_trezor), build_switch_params(:switch_to_trezor,dr) %>
              <% # 本表全转出 %>
              | <%= link_to t(:all_to_trezor), action: :auto_send_trezor_count %>
        <%  # 若此记录为消账记录
            elsif dr.real_profit == 0.01
              # 转到未卖记录  %>
              <%= link_to t(:switch_from_balance), build_switch_params(:switch_to_balance,dr) %>
        <%  # 若此记录为卖出记录
            else
              # 已实现损益(人民币)
              real_profit = to_n(dr.real_profit,2)
              # 已实现损益(CRYPTO)
              real_profit_crypto = to_n(real_profit.to_f*cny_to_crypto,8)
              # 察看订单成交明细  %>
              <%= look_order_link( dr, real_profit+' '+real_profit_crypto ) %>
        <%  end
          # 未卖记录｜凑消帐｜凑钱包
          else
               # 转出到钱包  %>
               <%#= link_to t(:set_to_trezor), build_switch_params(:switch_to_trezor,dr) %>
            <% # 转到消帐记录 %>
            <%#= link_to t(:switch_to_balance), build_switch_params(:switch_to_balance,dr) %>
        <%  # 若此记录为凑钱包记录 %>
        <%  if params[:make_trezor_count] %>
            <% # 本表全转出 %>
            <%= link_to t(:all_to_trezor), action: :auto_send_trezor_count %>
        <%  end %>
        <%  # 若此记录为凑消帐记录 %>
        <%  if params[:make_balance_count] %>
            <% # 本表全消帐 %>
            <%= link_to t(:all_to_balance), action: :auto_send_balance_count %>
        <%  end
          end %>
      </td>
    </tr>
  <%
    # 以下是只计算数值而不显示在页面的数据记录
    else
      price = to_n(dr.price)
      amount = to_n(dr.amount,6)
      if dr.real_profit
        real_profit = to_n(dr.real_profit,2)
        real_profit_crypto = to_n(real_profit.to_f*cny_to_crypto,8)
      else
        cny_amount = to_n(dr.cny_amount,2)
        cny_amount_now = dr.cny_amount_now
        earn_or_loss = dr.earn_or_loss
        profit = to_n(earn_or_loss.to_f/cny_amount.to_f*100)
      end
    end
    # 求和以显示数据加总或求平均
    n += 1
    total_price += price.to_f * amount.to_f
    total_amount += amount.to_f
    total_amount_fee += dr.amount_fees
    total_cny_amount += cny_amount.to_f
    total_cny_amount_now += cny_amount_now.to_f
    total_earn_or_loss += earn_or_loss.to_f
    if dr.real_profit
      total_real_profit += real_profit.to_f
      total_real_profit_crypto += real_profit_crypto.to_f
    end
    # 找出成交价的最大值
    max_buy_price = dr.price if dr.price >= max_buy_price
  end # 结束 @deal_records.each
  # 成交均价
  @total_ave_cost_price = total_amount > 0 ? (total_price/total_amount_fee).floor(4) : 0
%>
<% end %>
  <tr class="thead">
    <td colspan="2">
      <% # 显示现价与k线图链接 %>
      <%= show_prices_and_chart_links %>
    </td>
    <td align="right" title="额度翻倍的最大购买价: <%= get_invest_params(34,@code) %>">
      <% # 显示成交均价 %>
      <%= show_total_ave_cost_price %>
    </td>
    <td align="right">
      <% # 显示成本总和 %>
      <%= to_n(total_cny_amount,1) %>
    </td>
    <td align="right">
      <% # 显示现值总和 %>
      <%= to_n(total_cny_amount_now,1) %>
    </td>
    <td align="right">
      <% # 显示盈亏总和 %>
      <%= to_n(total_earn_or_loss,2) %>
    </td>
    <td align="right">
      <% # 显示利率总和 %>
      <%= to_n(total_earn_or_loss.to_f/total_cny_amount.to_f*100,2) if total_cny_amount > 0 %>
    </td>
    <td align="right">
      <%
        # 计算交易所是否有足够的量以卖出下一笔记录
        amount_remain_if_sell = @crypto_amount_ex - next_sell_amount
        # 计算交易所是否有足够的量以卖出所有记录
        amount_remain_if_clear = @crypto_amount_ex - total_amount_fee
        # 是否显示8位的CRYPTO数量
        if show_long_crypto_amount %>
          <%= to_n(total_amount,8) %>
      <%
        else
      %>
          <% # 显示CRYPTO总和 %>
          <span title="交易所的<%= @code.upcase %>总数"><%="#{to_n(@crypto_amount_ex,4)}"%></span>
      <%
        end
        # 显示CRYPTO仓位现况 %>
      | <span title="交易所的<%= @code.upcase %>仓位"><%= to_n(@crypto_level,1) %></span>/<span title="自动买入的最大仓位值"><%= to_n(@max_buy_level,1) %></span>(<span title="再买多少就达到自动买入的最大仓位值"><%=@max_buy_cny_remain.to_i%></span>/<span title="交易所内剩余的泰达币合人民币的值"><%= @usdt2cny_ex.to_i %></span>)
    </td>
    <td align="right" colspan="2">
      <% # 显示资产净值与走势图链接 %>
      <%= show_net_value_link %>
    </td>
  </tr>
</table>
